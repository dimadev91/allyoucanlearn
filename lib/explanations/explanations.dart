const String explainMaterial =
    'A MaterialApp is the starting point for a Flutter application.\n'
    'It provides the basic structure and configuration for your app, \n'
    'including themes, navigation, localization, and other app-level settings.\n'
    'Essentially, it sets up the environment in which your Flutter widgets will run, \n'
    'following the Material Design guidelines.\n\n';

const String explainMaterial1 =
    'Scaffolding, on the other hand, refers to the Scaffold widget in Flutter.\n'
    'The Scaffold provides a basic visual layout structure for your app‚Äôs screens.\n'
    'It gives you convenient slots for common UI elements like:\n\n'
    '- AppBar (top bar)\n'
    '- FloatingActionButton (floating button)\n'
    '- Drawer (side menu)\n'
    '- BottomNavigationBar (bottom tabs)\n'
    '- Body (main content area)\n\n'
    'By using a Scaffold inside a MaterialApp,\n'
    'you can quickly build a consistent and well-structured UI\n'
    'that follows Material Design principles.';

const String comeUtilizzareListaJason =
    '## üìú Sintassi per convertire una Lista JSON in List<TuaClasse>\n\n'
    'Quando un\'API restituisce un array JSON (una lista di oggetti),\n'
    'la conversione in una lista di oggetti Dart fortemente tipizzati\n'
    '(`List<TuaClasse>`) si svolge in tre passaggi fondamentali.\n\n'
    '---\n\n'
    '### 1. ‚öôÔ∏è Decodifica Iniziale (dal Testo alla Lista Grezza)\n\n'
    'Il corpo della risposta HTTP √® una stringa. Devi prima convertirlo in una\n'
    'struttura Dart di base utilizzando il pacchetto `dart:convert`.\n\n'
    '```dart\n'
    'import \'dart:convert\';\n'
    '// Se usi l\'API:\n'
    'import \'package:http/http.dart\' as http;\n\n'
    '// Supponendo che \'response\' sia la risposta HTTP\n'
    'final List<dynamic> jsonResponse = json.decode(response.body);\n'
    '```\n\n'
    '---\n\n'
    '### 2. üìù Il Modello con Factory Constructor\n\n'
    'Definisci la classe Dart (`TuaClasse`) e implementa un `factory constructor`\n'
    '(`.fromJson`) per gestire la conversione di **una singola mappa JSON**.\n\n'
    '```dart\n'
    'class TuaClasse {\n'
    '  // ... campi finali\n\n'
    '  factory TuaClasse.fromJson(Map<String, dynamic> json) {\n'
    '    return TuaClasse(\n'
    '      // Esempio di accesso sicuro:\n'
    '      id: json[\'id\'] as int,\n'
    '      name: json[\'name\'] as String,\n'
    '    );\n'
    '  }\n'
    '}\n'
    '```\n\n'
    '---\n\n'
    '### 3. üéØ Mappatura della Lista (Conversione Finale)\n\n'
    'Utilizza il metodo `.map()` sulla lista grezza (`List<dynamic>`) per applicare\n'
    'il tuo `factory constructor` ad ogni elemento. Questa √® la sintassi chiave:\n\n'
    '```dart\n'
    'final List<TuaClasse> listaOggettiTipizzata = jsonResponse\n'
    '    // Mappa ogni elemento JSON in un oggetto TuaClasse:\n'
    '    .map((jsonMap) => TuaClasse.fromJson(jsonMap as Map<String, dynamic>))\n'
    '    .toList();\n'
    '```';
